$date
	Mon Dec 27 12:00:43 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module imc_decoder_tb $end
$var wire 2 ! exec_logical_bitwise [1:0] $end
$var wire 1 " WE $end
$var wire 16 # SAEN [15:0] $end
$var wire 1 $ OE $end
$var wire 1 % EXECUTE_MIG $end
$var wire 1 & EXECUTE_MAGIC $end
$var wire 1 ' EXECUTE_IMPLY $end
$var wire 1 ( EXECUTE_BITWISE $end
$var wire 16 ) DATA_TO_MEM [15:0] $end
$var wire 1 * CS $end
$var wire 4 + ADDR_MEM3 [3:0] $end
$var wire 4 , ADDR_MEM2 [3:0] $end
$var wire 4 - ADDR_MEM1 [3:0] $end
$var reg 16 . DATA_FROM_MEM [15:0] $end
$var reg 1 / clk $end
$var reg 32 0 instruction [31:0] $end
$var reg 1 1 rst $end
$scope module uut $end
$var wire 16 2 DATA_FROM_MEM [15:0] $end
$var wire 1 ( EXECUTE_BITWISE $end
$var wire 1 ' EXECUTE_IMPLY $end
$var wire 1 & EXECUTE_MAGIC $end
$var wire 1 % EXECUTE_MIG $end
$var wire 1 / clk $end
$var wire 32 3 instruction [31:0] $end
$var wire 1 1 rst $end
$var reg 4 4 ADDR_MEM1 [3:0] $end
$var reg 4 5 ADDR_MEM2 [3:0] $end
$var reg 4 6 ADDR_MEM3 [3:0] $end
$var reg 1 * CS $end
$var reg 16 7 DATA_TO_MEM [15:0] $end
$var reg 1 $ OE $end
$var reg 16 8 SAEN [15:0] $end
$var reg 1 " WE $end
$var reg 1 9 exec_bitwise $end
$var reg 1 : exec_imply $end
$var reg 2 ; exec_logical_bitwise [1:0] $end
$var reg 1 < exec_magic $end
$var reg 1 = exec_mig $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
x<
bx ;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
b0 3
b0 2
01
b0 0
0/
b0 .
bx -
bx ,
bx +
x*
bx )
x(
x'
x&
x%
x$
bx #
x"
bx !
$end
#5000
0"
0*
b0 -
b0 4
0(
09
1'
1:
0&
0<
0%
0=
1/
#10000
0/
#15000
1/
#20000
0/
#25000
1/
#30000
0/
#35000
1/
#40000
0/
#45000
1/
#50000
0/
#55000
1/
#60000
0/
#65000
1/
#70000
0/
#75000
1/
#80000
0/
#85000
1/
#90000
0/
#95000
1/
#100000
0/
